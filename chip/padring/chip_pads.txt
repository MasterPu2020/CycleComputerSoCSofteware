
# PAD RING DEFINITION FILE	

# FORMAT:
#
#	CORE		<core_module_name>
#
# if no CORE line exists, the default core module name is topcell
#
#	WRAPPER		<wrapper_module_name>
#
# if no WRAPPER line exists, the default wrapper module name is wrap_<core_module_name>
#
#	INSTANCE	<core_instance_name>
#
# if no INSTANCE line exists, the default core instance name is core_instance
#
#	<side>,	<pad_type>,	<external_port_name>,	<internal_port_name(s)_if_different>
#
# where <side> is one of:
#	TOP
#	BOTTOM
#	LEFT
#	RIGHT
#
# and <pad_type> is one of:
#	INPUT
#	OUTPUT
#	OUTPUT_TRISTATE		Output pad with tristate enable signal
#	OUTPUT_OPEN_DRAIN	Open-drain output pad
#	INPUT_PULLUP		Input pad with integrated pull-up
#	INPUT_CLOCK		Input pad with integrated clock buffer
#	INOUT			Bi-directional pad
#	PADS_VDD		Pad which provides VDD to the pad ring
#	PADS_GND		Pad which provides GND to the pad ring
#	CORE_VDD		Pad which provides VDD to the core
#	CORE_GND		Pad which provides GND to the core

# DEFAULT PORT ORDER IS ANTICLOCKWISE


#===================================================
# chip_pads.txt
#===================================================
#
# This file specifies the pad ring for an 8 bit instance of the chip
# multiplier example module.
#
# You can generate the SystemVerilog wrapper file wrap_chip.sv
# and the Cadence I/O specification file wrap_chip.io by running
# the following command:
#
#     process_pad_ring chip_pads.txt
#


    WRAPPER   wrap_chip
    CORE      chip
    INSTANCE  core_inst

    TOP    INPUT       nFork	
    TOP    PADS_VDD
    TOP    INPUT       nCrank
    TOP    INPUT       SDI
    TOP    INPUT       Test
    TOP    INPUT       ScanEnable
    TOP    INPUT       nTrip	

    LEFT   INPUT       nMode
    LEFT   INPUT_CLOCK Clock	
    LEFT   INPUT       nReset	
    LEFT   CORE_VDD
    LEFT   INPUT       SDO
    LEFT   OUTPUT      nCS
    LEFT   OUTPUT      DnC
    LEFT   OUTPUT      SDIN
   
    BOTTOM PADS_GND
    BOTTOM OUTPUT      SCLK	
    BOTTOM OUTPUT      SegA
    BOTTOM OUTPUT      SegB
    BOTTOM OUTPUT      SegC
    BOTTOM OUTPUT      SegD
    BOTTOM OUTPUT      SegE

    RIGHT  OUTPUT      SegF
    RIGHT  OUTPUT      SegG
    RIGHT  CORE_GND
    RIGHT  OUTPUT      DP	
    RIGHT  OUTPUT      nDigit[0]
    RIGHT  OUTPUT      nDigit[1]
    RIGHT  OUTPUT      nDigit[2]
    RIGHT  OUTPUT      nDigit[3]
