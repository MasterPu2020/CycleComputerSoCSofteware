ARM GAS  /tmp/ccRwBG1I.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"vectors_designstart.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.4.1 20160919 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -imultilib armv6-m
  18              	@ -iprefix /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/
  19              	@ -isysroot /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../arm-none-eabi
  20              	@ -MD code/vectors_designstart.d -MF .dep/vectors_designstart.o.d -MP
  21              	@ -MQ code/vectors_designstart.o -D__USES_INITFINI__ -D RUN_FROM_FLASH=1
  22              	@ code/vectors_designstart.c -mcpu=cortex-m0 -mthumb
  23              	@ -auxbase-strip code/vectors_designstart.o -gdwarf-2 -O0 -Wall
  24              	@ -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  26              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  27              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  28              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  30              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  31              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
  32              	@ -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  33              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  34              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  35              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings
  36              	@ -fomit-frame-pointer -fpeephole -fprefetch-loop-arrays
  37              	@ -freg-struct-return -fsched-critical-path-heuristic
  38              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  39              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  40              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  41              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  42              	@ -fsplit-ivs-in-unroller -fstdarg-opt -fstrict-volatile-bitfields
  43              	@ -fsync-libcalls -ftrapping-math -ftree-coalesce-vars -ftree-cselim
  44              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  45              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  46              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  47              	@ -fzero-initialized-in-bss -mlittle-endian -mpic-data-is-text-relative
  48              	@ -msched-prolog -mthumb -mvectorize-with-neon-quad
  49              	
  50              		.text
  51              	.Ltext0:
  52              		.cfi_sections	.debug_frame
  53              		.global	gVectors
  54              		.section	.vectors,"a",%progbits
  55              		.align	2
  56              		.type	gVectors, %object
  57              		.size	gVectors, 192
ARM GAS  /tmp/ccRwBG1I.s 			page 2


  58              	gVectors:
  59 0000 00000000 		.word	_estack
  60 0004 00000000 		.word	ResetHandler
  61 0008 00000000 		.word	NMI_Handler
  62 000c 00000000 		.word	HardFault_Handler
  63 0010 00000000 		.word	MemManage_Handler
  64 0014 00000000 		.word	BusFault_Handler
  65 0018 00000000 		.word	UsageFault_Handler
  66 001c 00000000 		.word	0
  67 0020 00000000 		.word	0
  68 0024 00000000 		.word	0
  69 0028 00000000 		.word	0
  70 002c 00000000 		.word	SVC_Handler
  71 0030 00000000 		.word	DebugMon_Handler
  72 0034 00000000 		.word	0
  73 0038 00000000 		.word	PendSV_Handler
  74 003c 00000000 		.word	SysTick_Handler
  75 0040 00000000 		.word	WAKEUP_IRQHandler
  76 0044 00000000 		.word	WAKEUP_IRQHandler
  77 0048 00000000 		.word	WAKEUP_IRQHandler
  78 004c 00000000 		.word	WAKEUP_IRQHandler
  79 0050 00000000 		.word	WAKEUP_IRQHandler
  80 0054 00000000 		.word	WAKEUP_IRQHandler
  81 0058 00000000 		.word	WAKEUP_IRQHandler
  82 005c 00000000 		.word	WAKEUP_IRQHandler
  83 0060 00000000 		.word	WAKEUP_IRQHandler
  84 0064 00000000 		.word	WAKEUP_IRQHandler
  85 0068 00000000 		.word	WAKEUP_IRQHandler
  86 006c 00000000 		.word	WAKEUP_IRQHandler
  87 0070 00000000 		.word	WAKEUP_IRQHandler
  88 0074 00000000 		.word	C_CAN_IRQHandler
  89 0078 00000000 		.word	SSP1_IRQHandler
  90 007c 00000000 		.word	I2C_IRQHandler
  91 0080 00000000 		.word	CT16B0_IRQHandler
  92 0084 00000000 		.word	CT16B1_IRQHandler
  93 0088 00000000 		.word	CT32B0_IRQHandler
  94 008c 00000000 		.word	CT32B1_IRQHandler
  95 0090 00000000 		.word	SSP0_IRQHandler
  96 0094 00000000 		.word	UART_IRQHandler
  97 0098 00000000 		.word	0
  98 009c 00000000 		.word	0
  99 00a0 00000000 		.word	ADC_IRQHandler
 100 00a4 00000000 		.word	WDT_IRQHandler
 101 00a8 00000000 		.word	BOD_IRQHandler
 102 00ac 00000000 		.word	0
 103 00b0 00000000 		.word	PIO_3_IRQHandler
 104 00b4 00000000 		.word	PIO_2_IRQHandler
 105 00b8 00000000 		.word	PIO_1_IRQHandler
 106 00bc 00000000 		.word	PIO_0_IRQHandler
 107              		.text
 108              		.align	2
 109              		.weak	NMI_Handler
 110              		.code	16
 111              		.thumb_func
 112              		.type	NMI_Handler, %function
 113              	NMI_Handler:
 114              	.LFB0:
ARM GAS  /tmp/ccRwBG1I.s 			page 3


 115              		.file 1 "code/vectors_designstart.c"
   1:code/vectors_designstart.c **** /****************************************************************************
   2:code/vectors_designstart.c **** *  Copyright (c) 2011 by Michael Fischer. All rights reserved.
   3:code/vectors_designstart.c **** *
   4:code/vectors_designstart.c **** *  Redistribution and use in source and binary forms, with or without 
   5:code/vectors_designstart.c **** *  modification, are permitted provided that the following conditions 
   6:code/vectors_designstart.c **** *  are met:
   7:code/vectors_designstart.c **** *  
   8:code/vectors_designstart.c **** *  1. Redistributions of source code must retain the above copyright 
   9:code/vectors_designstart.c **** *     notice, this list of conditions and the following disclaimer.
  10:code/vectors_designstart.c **** *  2. Redistributions in binary form must reproduce the above copyright
  11:code/vectors_designstart.c **** *     notice, this list of conditions and the following disclaimer in the 
  12:code/vectors_designstart.c **** *     documentation and/or other materials provided with the distribution.
  13:code/vectors_designstart.c **** *  3. Neither the name of the author nor the names of its contributors may 
  14:code/vectors_designstart.c **** *     be used to endorse or promote products derived from this software 
  15:code/vectors_designstart.c **** *     without specific prior written permission.
  16:code/vectors_designstart.c **** *
  17:code/vectors_designstart.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  18:code/vectors_designstart.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  19:code/vectors_designstart.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
  20:code/vectors_designstart.c **** *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
  21:code/vectors_designstart.c **** *  THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
  22:code/vectors_designstart.c **** *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
  23:code/vectors_designstart.c **** *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
  24:code/vectors_designstart.c **** *  OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
  25:code/vectors_designstart.c **** *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
  26:code/vectors_designstart.c **** *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF 
  27:code/vectors_designstart.c **** *  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
  28:code/vectors_designstart.c **** *  SUCH DAMAGE.
  29:code/vectors_designstart.c **** *
  30:code/vectors_designstart.c **** ****************************************************************************
  31:code/vectors_designstart.c **** *  History:
  32:code/vectors_designstart.c **** *
  33:code/vectors_designstart.c **** *  10.04.2011  mifi  First Version for the LPC1114
  34:code/vectors_designstart.c **** ****************************************************************************/
  35:code/vectors_designstart.c **** #define __VECTORS_LPC1114_C__
  36:code/vectors_designstart.c **** 
  37:code/vectors_designstart.c **** /*=========================================================================*/
  38:code/vectors_designstart.c **** /*  DEFINE: All extern Data                                                */
  39:code/vectors_designstart.c **** /*=========================================================================*/
  40:code/vectors_designstart.c **** extern unsigned long _estack;
  41:code/vectors_designstart.c **** 
  42:code/vectors_designstart.c **** /*=========================================================================*/
  43:code/vectors_designstart.c **** /*  DEFINE: Prototypes                                                     */
  44:code/vectors_designstart.c **** /*=========================================================================*/
  45:code/vectors_designstart.c **** void ResetHandler(void);
  46:code/vectors_designstart.c **** 
  47:code/vectors_designstart.c **** void NMI_Handler (void) __attribute__((weak));
  48:code/vectors_designstart.c **** void HardFault_Handler (void) __attribute__((weak));
  49:code/vectors_designstart.c **** void MemManage_Handler (void) __attribute__((weak));
  50:code/vectors_designstart.c **** void BusFault_Handler (void) __attribute__((weak));
  51:code/vectors_designstart.c **** void UsageFault_Handler (void) __attribute__((weak));
  52:code/vectors_designstart.c **** void SVC_Handler (void) __attribute__((weak));
  53:code/vectors_designstart.c **** void DebugMon_Handler (void) __attribute__((weak));
  54:code/vectors_designstart.c **** void PendSV_Handler (void) __attribute__((weak));
  55:code/vectors_designstart.c **** void SysTick_Handler (void) __attribute__((weak));
  56:code/vectors_designstart.c **** 
ARM GAS  /tmp/ccRwBG1I.s 			page 4


  57:code/vectors_designstart.c **** void WAKEUP_IRQHandler (void) __attribute__((weak));
  58:code/vectors_designstart.c **** void C_CAN_IRQHandler (void) __attribute__((weak));
  59:code/vectors_designstart.c **** void SSP1_IRQHandler (void) __attribute__((weak));
  60:code/vectors_designstart.c **** void I2C_IRQHandler (void) __attribute__((weak));
  61:code/vectors_designstart.c **** void CT16B0_IRQHandler (void) __attribute__((weak));
  62:code/vectors_designstart.c **** void CT16B1_IRQHandler (void) __attribute__((weak));
  63:code/vectors_designstart.c **** void CT32B0_IRQHandler (void) __attribute__((weak));
  64:code/vectors_designstart.c **** void CT32B1_IRQHandler (void) __attribute__((weak));
  65:code/vectors_designstart.c **** void SSP0_IRQHandler (void) __attribute__((weak));
  66:code/vectors_designstart.c **** void UART_IRQHandler (void) __attribute__((weak));
  67:code/vectors_designstart.c **** void ADC_IRQHandler (void) __attribute__((weak));
  68:code/vectors_designstart.c **** void WDT_IRQHandler (void) __attribute__((weak));
  69:code/vectors_designstart.c **** void BOD_IRQHandler (void) __attribute__((weak));
  70:code/vectors_designstart.c **** void PIO_3_IRQHandler (void) __attribute__((weak));
  71:code/vectors_designstart.c **** void PIO_2_IRQHandler (void) __attribute__((weak));
  72:code/vectors_designstart.c **** void PIO_1_IRQHandler (void) __attribute__((weak));
  73:code/vectors_designstart.c **** void PIO_0_IRQHandler (void) __attribute__((weak));
  74:code/vectors_designstart.c **** 
  75:code/vectors_designstart.c **** /*=========================================================================*/
  76:code/vectors_designstart.c **** /*  DEFINE: All code exported                                              */
  77:code/vectors_designstart.c **** /*=========================================================================*/
  78:code/vectors_designstart.c **** /*
  79:code/vectors_designstart.c ****  * This is our vector table.
  80:code/vectors_designstart.c ****  */
  81:code/vectors_designstart.c **** __attribute__ ((section(".vectors"), used))
  82:code/vectors_designstart.c **** void (* const gVectors[])(void) = 
  83:code/vectors_designstart.c **** {
  84:code/vectors_designstart.c ****    (void (*)(void))((unsigned long)&_estack),
  85:code/vectors_designstart.c ****    ResetHandler,
  86:code/vectors_designstart.c ****    NMI_Handler,
  87:code/vectors_designstart.c ****    HardFault_Handler,
  88:code/vectors_designstart.c ****    MemManage_Handler,
  89:code/vectors_designstart.c ****    BusFault_Handler,
  90:code/vectors_designstart.c ****    UsageFault_Handler,
  91:code/vectors_designstart.c ****    0, 0, 0, 0,
  92:code/vectors_designstart.c ****    SVC_Handler,
  93:code/vectors_designstart.c ****    DebugMon_Handler,
  94:code/vectors_designstart.c ****    0,
  95:code/vectors_designstart.c ****    PendSV_Handler,
  96:code/vectors_designstart.c ****    SysTick_Handler,
  97:code/vectors_designstart.c **** 
  98:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
  99:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 100:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 101:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 102:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 103:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 104:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 105:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 106:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 107:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 108:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 109:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 110:code/vectors_designstart.c ****    WAKEUP_IRQHandler,
 111:code/vectors_designstart.c ****    C_CAN_IRQHandler,
 112:code/vectors_designstart.c ****    SSP1_IRQHandler,
 113:code/vectors_designstart.c ****    I2C_IRQHandler,
ARM GAS  /tmp/ccRwBG1I.s 			page 5


 114:code/vectors_designstart.c ****    CT16B0_IRQHandler,
 115:code/vectors_designstart.c ****    CT16B1_IRQHandler,
 116:code/vectors_designstart.c ****    CT32B0_IRQHandler,
 117:code/vectors_designstart.c ****    CT32B1_IRQHandler,
 118:code/vectors_designstart.c ****    SSP0_IRQHandler,
 119:code/vectors_designstart.c ****    UART_IRQHandler,
 120:code/vectors_designstart.c ****    0, 0,
 121:code/vectors_designstart.c ****    ADC_IRQHandler,
 122:code/vectors_designstart.c ****    WDT_IRQHandler,
 123:code/vectors_designstart.c ****    BOD_IRQHandler,
 124:code/vectors_designstart.c ****    0,
 125:code/vectors_designstart.c ****    PIO_3_IRQHandler,
 126:code/vectors_designstart.c ****    PIO_2_IRQHandler,
 127:code/vectors_designstart.c ****    PIO_1_IRQHandler,
 128:code/vectors_designstart.c ****    PIO_0_IRQHandler
 129:code/vectors_designstart.c **** }; /* gVectors */
 130:code/vectors_designstart.c **** 
 131:code/vectors_designstart.c **** /*
 132:code/vectors_designstart.c ****  * And here are the weak interrupt handlers.
 133:code/vectors_designstart.c ****  */
 134:code/vectors_designstart.c **** void NMI_Handler (void) { while(1); }
 116              		.loc 1 134 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.L2:
 122              		.loc 1 134 0 discriminator 1
 123 0000 FEE7     		b	.L2	@
 124              		.cfi_endproc
 125              	.LFE0:
 126              		.size	NMI_Handler, .-NMI_Handler
 127 0002 C046     		.align	2
 128              		.weak	HardFault_Handler
 129              		.code	16
 130              		.thumb_func
 131              		.type	HardFault_Handler, %function
 132              	HardFault_Handler:
 133              	.LFB1:
 135:code/vectors_designstart.c **** void HardFault_Handler (void) { while(1); }
 134              		.loc 1 135 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.L4:
 140              		.loc 1 135 0 discriminator 1
 141 0004 FEE7     		b	.L4	@
 142              		.cfi_endproc
 143              	.LFE1:
 144              		.size	HardFault_Handler, .-HardFault_Handler
 145 0006 C046     		.align	2
 146              		.weak	MemManage_Handler
 147              		.code	16
 148              		.thumb_func
 149              		.type	MemManage_Handler, %function
 150              	MemManage_Handler:
ARM GAS  /tmp/ccRwBG1I.s 			page 6


 151              	.LFB2:
 136:code/vectors_designstart.c **** void MemManage_Handler (void) { while(1); }
 152              		.loc 1 136 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.L6:
 158              		.loc 1 136 0 discriminator 1
 159 0008 FEE7     		b	.L6	@
 160              		.cfi_endproc
 161              	.LFE2:
 162              		.size	MemManage_Handler, .-MemManage_Handler
 163 000a C046     		.align	2
 164              		.weak	BusFault_Handler
 165              		.code	16
 166              		.thumb_func
 167              		.type	BusFault_Handler, %function
 168              	BusFault_Handler:
 169              	.LFB3:
 137:code/vectors_designstart.c **** void BusFault_Handler (void) { while(1); }
 170              		.loc 1 137 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.L8:
 176              		.loc 1 137 0 discriminator 1
 177 000c FEE7     		b	.L8	@
 178              		.cfi_endproc
 179              	.LFE3:
 180              		.size	BusFault_Handler, .-BusFault_Handler
 181 000e C046     		.align	2
 182              		.weak	UsageFault_Handler
 183              		.code	16
 184              		.thumb_func
 185              		.type	UsageFault_Handler, %function
 186              	UsageFault_Handler:
 187              	.LFB4:
 138:code/vectors_designstart.c **** void UsageFault_Handler (void) { while(1); }
 188              		.loc 1 138 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.L10:
 194              		.loc 1 138 0 discriminator 1
 195 0010 FEE7     		b	.L10	@
 196              		.cfi_endproc
 197              	.LFE4:
 198              		.size	UsageFault_Handler, .-UsageFault_Handler
 199 0012 C046     		.align	2
 200              		.weak	SVC_Handler
 201              		.code	16
 202              		.thumb_func
 203              		.type	SVC_Handler, %function
 204              	SVC_Handler:
ARM GAS  /tmp/ccRwBG1I.s 			page 7


 205              	.LFB5:
 139:code/vectors_designstart.c **** void SVC_Handler (void) { while(1); }
 206              		.loc 1 139 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.L12:
 212              		.loc 1 139 0 discriminator 1
 213 0014 FEE7     		b	.L12	@
 214              		.cfi_endproc
 215              	.LFE5:
 216              		.size	SVC_Handler, .-SVC_Handler
 217 0016 C046     		.align	2
 218              		.weak	DebugMon_Handler
 219              		.code	16
 220              		.thumb_func
 221              		.type	DebugMon_Handler, %function
 222              	DebugMon_Handler:
 223              	.LFB6:
 140:code/vectors_designstart.c **** void DebugMon_Handler (void) { while(1); }
 224              		.loc 1 140 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.L14:
 230              		.loc 1 140 0 discriminator 1
 231 0018 FEE7     		b	.L14	@
 232              		.cfi_endproc
 233              	.LFE6:
 234              		.size	DebugMon_Handler, .-DebugMon_Handler
 235 001a C046     		.align	2
 236              		.weak	PendSV_Handler
 237              		.code	16
 238              		.thumb_func
 239              		.type	PendSV_Handler, %function
 240              	PendSV_Handler:
 241              	.LFB7:
 141:code/vectors_designstart.c **** void PendSV_Handler (void) { while(1); }
 242              		.loc 1 141 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247              	.L16:
 248              		.loc 1 141 0 discriminator 1
 249 001c FEE7     		b	.L16	@
 250              		.cfi_endproc
 251              	.LFE7:
 252              		.size	PendSV_Handler, .-PendSV_Handler
 253 001e C046     		.align	2
 254              		.weak	SysTick_Handler
 255              		.code	16
 256              		.thumb_func
 257              		.type	SysTick_Handler, %function
 258              	SysTick_Handler:
ARM GAS  /tmp/ccRwBG1I.s 			page 8


 259              	.LFB8:
 142:code/vectors_designstart.c **** void SysTick_Handler (void) { while(1); }
 260              		.loc 1 142 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.L18:
 266              		.loc 1 142 0 discriminator 1
 267 0020 FEE7     		b	.L18	@
 268              		.cfi_endproc
 269              	.LFE8:
 270              		.size	SysTick_Handler, .-SysTick_Handler
 271 0022 C046     		.align	2
 272              		.weak	WAKEUP_IRQHandler
 273              		.code	16
 274              		.thumb_func
 275              		.type	WAKEUP_IRQHandler, %function
 276              	WAKEUP_IRQHandler:
 277              	.LFB9:
 143:code/vectors_designstart.c **** 
 144:code/vectors_designstart.c **** void WAKEUP_IRQHandler (void) { while(1); }
 278              		.loc 1 144 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283              	.L20:
 284              		.loc 1 144 0 discriminator 1
 285 0024 FEE7     		b	.L20	@
 286              		.cfi_endproc
 287              	.LFE9:
 288              		.size	WAKEUP_IRQHandler, .-WAKEUP_IRQHandler
 289 0026 C046     		.align	2
 290              		.weak	C_CAN_IRQHandler
 291              		.code	16
 292              		.thumb_func
 293              		.type	C_CAN_IRQHandler, %function
 294              	C_CAN_IRQHandler:
 295              	.LFB10:
 145:code/vectors_designstart.c **** void C_CAN_IRQHandler (void) { while(1); }
 296              		.loc 1 145 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.L22:
 302              		.loc 1 145 0 discriminator 1
 303 0028 FEE7     		b	.L22	@
 304              		.cfi_endproc
 305              	.LFE10:
 306              		.size	C_CAN_IRQHandler, .-C_CAN_IRQHandler
 307 002a C046     		.align	2
 308              		.weak	SSP1_IRQHandler
 309              		.code	16
 310              		.thumb_func
 311              		.type	SSP1_IRQHandler, %function
ARM GAS  /tmp/ccRwBG1I.s 			page 9


 312              	SSP1_IRQHandler:
 313              	.LFB11:
 146:code/vectors_designstart.c **** void SSP1_IRQHandler (void) { while(1); }
 314              		.loc 1 146 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.L24:
 320              		.loc 1 146 0 discriminator 1
 321 002c FEE7     		b	.L24	@
 322              		.cfi_endproc
 323              	.LFE11:
 324              		.size	SSP1_IRQHandler, .-SSP1_IRQHandler
 325 002e C046     		.align	2
 326              		.weak	I2C_IRQHandler
 327              		.code	16
 328              		.thumb_func
 329              		.type	I2C_IRQHandler, %function
 330              	I2C_IRQHandler:
 331              	.LFB12:
 147:code/vectors_designstart.c **** void I2C_IRQHandler (void) { while(1); }
 332              		.loc 1 147 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337              	.L26:
 338              		.loc 1 147 0 discriminator 1
 339 0030 FEE7     		b	.L26	@
 340              		.cfi_endproc
 341              	.LFE12:
 342              		.size	I2C_IRQHandler, .-I2C_IRQHandler
 343 0032 C046     		.align	2
 344              		.weak	CT16B0_IRQHandler
 345              		.code	16
 346              		.thumb_func
 347              		.type	CT16B0_IRQHandler, %function
 348              	CT16B0_IRQHandler:
 349              	.LFB13:
 148:code/vectors_designstart.c **** void CT16B0_IRQHandler (void) { while(1); }
 350              		.loc 1 148 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.L28:
 356              		.loc 1 148 0 discriminator 1
 357 0034 FEE7     		b	.L28	@
 358              		.cfi_endproc
 359              	.LFE13:
 360              		.size	CT16B0_IRQHandler, .-CT16B0_IRQHandler
 361 0036 C046     		.align	2
 362              		.weak	CT16B1_IRQHandler
 363              		.code	16
 364              		.thumb_func
 365              		.type	CT16B1_IRQHandler, %function
ARM GAS  /tmp/ccRwBG1I.s 			page 10


 366              	CT16B1_IRQHandler:
 367              	.LFB14:
 149:code/vectors_designstart.c **** void CT16B1_IRQHandler (void) { while(1); }
 368              		.loc 1 149 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373              	.L30:
 374              		.loc 1 149 0 discriminator 1
 375 0038 FEE7     		b	.L30	@
 376              		.cfi_endproc
 377              	.LFE14:
 378              		.size	CT16B1_IRQHandler, .-CT16B1_IRQHandler
 379 003a C046     		.align	2
 380              		.weak	CT32B0_IRQHandler
 381              		.code	16
 382              		.thumb_func
 383              		.type	CT32B0_IRQHandler, %function
 384              	CT32B0_IRQHandler:
 385              	.LFB15:
 150:code/vectors_designstart.c **** void CT32B0_IRQHandler (void) { while(1); }
 386              		.loc 1 150 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              	.L32:
 392              		.loc 1 150 0 discriminator 1
 393 003c FEE7     		b	.L32	@
 394              		.cfi_endproc
 395              	.LFE15:
 396              		.size	CT32B0_IRQHandler, .-CT32B0_IRQHandler
 397 003e C046     		.align	2
 398              		.weak	CT32B1_IRQHandler
 399              		.code	16
 400              		.thumb_func
 401              		.type	CT32B1_IRQHandler, %function
 402              	CT32B1_IRQHandler:
 403              	.LFB16:
 151:code/vectors_designstart.c **** void CT32B1_IRQHandler (void) { while(1); }
 404              		.loc 1 151 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409              	.L34:
 410              		.loc 1 151 0 discriminator 1
 411 0040 FEE7     		b	.L34	@
 412              		.cfi_endproc
 413              	.LFE16:
 414              		.size	CT32B1_IRQHandler, .-CT32B1_IRQHandler
 415 0042 C046     		.align	2
 416              		.weak	SSP0_IRQHandler
 417              		.code	16
 418              		.thumb_func
 419              		.type	SSP0_IRQHandler, %function
ARM GAS  /tmp/ccRwBG1I.s 			page 11


 420              	SSP0_IRQHandler:
 421              	.LFB17:
 152:code/vectors_designstart.c **** void SSP0_IRQHandler (void) { while(1); }
 422              		.loc 1 152 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.L36:
 428              		.loc 1 152 0 discriminator 1
 429 0044 FEE7     		b	.L36	@
 430              		.cfi_endproc
 431              	.LFE17:
 432              		.size	SSP0_IRQHandler, .-SSP0_IRQHandler
 433 0046 C046     		.align	2
 434              		.weak	UART_IRQHandler
 435              		.code	16
 436              		.thumb_func
 437              		.type	UART_IRQHandler, %function
 438              	UART_IRQHandler:
 439              	.LFB18:
 153:code/vectors_designstart.c **** void UART_IRQHandler (void) { while(1); }
 440              		.loc 1 153 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.L38:
 446              		.loc 1 153 0 discriminator 1
 447 0048 FEE7     		b	.L38	@
 448              		.cfi_endproc
 449              	.LFE18:
 450              		.size	UART_IRQHandler, .-UART_IRQHandler
 451 004a C046     		.align	2
 452              		.weak	ADC_IRQHandler
 453              		.code	16
 454              		.thumb_func
 455              		.type	ADC_IRQHandler, %function
 456              	ADC_IRQHandler:
 457              	.LFB19:
 154:code/vectors_designstart.c **** void ADC_IRQHandler (void) { while(1); }
 458              		.loc 1 154 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              	.L40:
 464              		.loc 1 154 0 discriminator 1
 465 004c FEE7     		b	.L40	@
 466              		.cfi_endproc
 467              	.LFE19:
 468              		.size	ADC_IRQHandler, .-ADC_IRQHandler
 469 004e C046     		.align	2
 470              		.weak	WDT_IRQHandler
 471              		.code	16
 472              		.thumb_func
 473              		.type	WDT_IRQHandler, %function
ARM GAS  /tmp/ccRwBG1I.s 			page 12


 474              	WDT_IRQHandler:
 475              	.LFB20:
 155:code/vectors_designstart.c **** void WDT_IRQHandler (void) { while(1); }
 476              		.loc 1 155 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481              	.L42:
 482              		.loc 1 155 0 discriminator 1
 483 0050 FEE7     		b	.L42	@
 484              		.cfi_endproc
 485              	.LFE20:
 486              		.size	WDT_IRQHandler, .-WDT_IRQHandler
 487 0052 C046     		.align	2
 488              		.weak	BOD_IRQHandler
 489              		.code	16
 490              		.thumb_func
 491              		.type	BOD_IRQHandler, %function
 492              	BOD_IRQHandler:
 493              	.LFB21:
 156:code/vectors_designstart.c **** void BOD_IRQHandler (void) { while(1); }
 494              		.loc 1 156 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499              	.L44:
 500              		.loc 1 156 0 discriminator 1
 501 0054 FEE7     		b	.L44	@
 502              		.cfi_endproc
 503              	.LFE21:
 504              		.size	BOD_IRQHandler, .-BOD_IRQHandler
 505 0056 C046     		.align	2
 506              		.weak	PIO_3_IRQHandler
 507              		.code	16
 508              		.thumb_func
 509              		.type	PIO_3_IRQHandler, %function
 510              	PIO_3_IRQHandler:
 511              	.LFB22:
 157:code/vectors_designstart.c **** void PIO_3_IRQHandler (void) { while(1); }
 512              		.loc 1 157 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.L46:
 518              		.loc 1 157 0 discriminator 1
 519 0058 FEE7     		b	.L46	@
 520              		.cfi_endproc
 521              	.LFE22:
 522              		.size	PIO_3_IRQHandler, .-PIO_3_IRQHandler
 523 005a C046     		.align	2
 524              		.weak	PIO_2_IRQHandler
 525              		.code	16
 526              		.thumb_func
 527              		.type	PIO_2_IRQHandler, %function
ARM GAS  /tmp/ccRwBG1I.s 			page 13


 528              	PIO_2_IRQHandler:
 529              	.LFB23:
 158:code/vectors_designstart.c **** void PIO_2_IRQHandler (void) { while(1); }
 530              		.loc 1 158 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535              	.L48:
 536              		.loc 1 158 0 discriminator 1
 537 005c FEE7     		b	.L48	@
 538              		.cfi_endproc
 539              	.LFE23:
 540              		.size	PIO_2_IRQHandler, .-PIO_2_IRQHandler
 541 005e C046     		.align	2
 542              		.weak	PIO_1_IRQHandler
 543              		.code	16
 544              		.thumb_func
 545              		.type	PIO_1_IRQHandler, %function
 546              	PIO_1_IRQHandler:
 547              	.LFB24:
 159:code/vectors_designstart.c **** void PIO_1_IRQHandler (void) { while(1); }
 548              		.loc 1 159 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              	.L50:
 554              		.loc 1 159 0 discriminator 1
 555 0060 FEE7     		b	.L50	@
 556              		.cfi_endproc
 557              	.LFE24:
 558              		.size	PIO_1_IRQHandler, .-PIO_1_IRQHandler
 559 0062 C046     		.align	2
 560              		.weak	PIO_0_IRQHandler
 561              		.code	16
 562              		.thumb_func
 563              		.type	PIO_0_IRQHandler, %function
 564              	PIO_0_IRQHandler:
 565              	.LFB25:
 160:code/vectors_designstart.c **** void PIO_0_IRQHandler (void) { while(1); }
 566              		.loc 1 160 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571              	.L52:
 572              		.loc 1 160 0 discriminator 1
 573 0064 FEE7     		b	.L52	@
 574              		.cfi_endproc
 575              	.LFE25:
 576              		.size	PIO_0_IRQHandler, .-PIO_0_IRQHandler
 577              	.Letext0:
 578 0066 C046     		.section	.debug_info,"",%progbits
 579              	.Ldebug_info0:
 580 0000 93020000 		.4byte	0x293
 581 0004 0200     		.2byte	0x2
ARM GAS  /tmp/ccRwBG1I.s 			page 14


 582 0006 00000000 		.4byte	.Ldebug_abbrev0
 583 000a 04       		.byte	0x4
 584 000b 01       		.uleb128 0x1
 585 000c 00000000 		.4byte	.LASF30
 586 0010 0C       		.byte	0xc
 587 0011 BF010000 		.4byte	.LASF31
 588 0015 DA010000 		.4byte	.LASF32
 589 0019 00000000 		.4byte	.Ltext0
 590 001d 66000000 		.4byte	.Letext0
 591 0021 00000000 		.4byte	.Ldebug_line0
 592 0025 02       		.uleb128 0x2
 593 0026 01       		.byte	0x1
 594 0027 5E010000 		.4byte	.LASF0
 595 002b 01       		.byte	0x1
 596 002c 86       		.byte	0x86
 597 002d 01       		.byte	0x1
 598 002e 00000000 		.4byte	.LFB0
 599 0032 02000000 		.4byte	.LFE0
 600 0036 02       		.byte	0x2
 601 0037 7D       		.byte	0x7d
 602 0038 00       		.sleb128 0
 603 0039 01       		.byte	0x1
 604 003a 02       		.uleb128 0x2
 605 003b 01       		.byte	0x1
 606 003c 4C010000 		.4byte	.LASF1
 607 0040 01       		.byte	0x1
 608 0041 87       		.byte	0x87
 609 0042 01       		.byte	0x1
 610 0043 04000000 		.4byte	.LFB1
 611 0047 06000000 		.4byte	.LFE1
 612 004b 02       		.byte	0x2
 613 004c 7D       		.byte	0x7d
 614 004d 00       		.sleb128 0
 615 004e 01       		.byte	0x1
 616 004f 02       		.uleb128 0x2
 617 0050 01       		.byte	0x1
 618 0051 8B010000 		.4byte	.LASF2
 619 0055 01       		.byte	0x1
 620 0056 88       		.byte	0x88
 621 0057 01       		.byte	0x1
 622 0058 08000000 		.4byte	.LFB2
 623 005c 0A000000 		.4byte	.LFE2
 624 0060 02       		.byte	0x2
 625 0061 7D       		.byte	0x7d
 626 0062 00       		.sleb128 0
 627 0063 01       		.byte	0x1
 628 0064 02       		.uleb128 0x2
 629 0065 01       		.byte	0x1
 630 0066 F7000000 		.4byte	.LASF3
 631 006a 01       		.byte	0x1
 632 006b 89       		.byte	0x89
 633 006c 01       		.byte	0x1
 634 006d 0C000000 		.4byte	.LFB3
 635 0071 0E000000 		.4byte	.LFE3
 636 0075 02       		.byte	0x2
 637 0076 7D       		.byte	0x7d
 638 0077 00       		.sleb128 0
ARM GAS  /tmp/ccRwBG1I.s 			page 15


 639 0078 01       		.byte	0x1
 640 0079 02       		.uleb128 0x2
 641 007a 01       		.byte	0x1
 642 007b D5000000 		.4byte	.LASF4
 643 007f 01       		.byte	0x1
 644 0080 8A       		.byte	0x8a
 645 0081 01       		.byte	0x1
 646 0082 10000000 		.4byte	.LFB4
 647 0086 12000000 		.4byte	.LFE4
 648 008a 02       		.byte	0x2
 649 008b 7D       		.byte	0x7d
 650 008c 00       		.sleb128 0
 651 008d 01       		.byte	0x1
 652 008e 02       		.uleb128 0x2
 653 008f 01       		.byte	0x1
 654 0090 55020000 		.4byte	.LASF5
 655 0094 01       		.byte	0x1
 656 0095 8B       		.byte	0x8b
 657 0096 01       		.byte	0x1
 658 0097 14000000 		.4byte	.LFB5
 659 009b 16000000 		.4byte	.LFE5
 660 009f 02       		.byte	0x2
 661 00a0 7D       		.byte	0x7d
 662 00a1 00       		.sleb128 0
 663 00a2 01       		.byte	0x1
 664 00a3 02       		.uleb128 0x2
 665 00a4 01       		.byte	0x1
 666 00a5 69020000 		.4byte	.LASF6
 667 00a9 01       		.byte	0x1
 668 00aa 8C       		.byte	0x8c
 669 00ab 01       		.byte	0x1
 670 00ac 18000000 		.4byte	.LFB6
 671 00b0 1A000000 		.4byte	.LFE6
 672 00b4 02       		.byte	0x2
 673 00b5 7D       		.byte	0x7d
 674 00b6 00       		.sleb128 0
 675 00b7 01       		.byte	0x1
 676 00b8 02       		.uleb128 0x2
 677 00b9 01       		.byte	0x1
 678 00ba A4000000 		.4byte	.LASF7
 679 00be 01       		.byte	0x1
 680 00bf 8D       		.byte	0x8d
 681 00c0 01       		.byte	0x1
 682 00c1 1C000000 		.4byte	.LFB7
 683 00c5 1E000000 		.4byte	.LFE7
 684 00c9 02       		.byte	0x2
 685 00ca 7D       		.byte	0x7d
 686 00cb 00       		.sleb128 0
 687 00cc 01       		.byte	0x1
 688 00cd 02       		.uleb128 0x2
 689 00ce 01       		.byte	0x1
 690 00cf 9D010000 		.4byte	.LASF8
 691 00d3 01       		.byte	0x1
 692 00d4 8E       		.byte	0x8e
 693 00d5 01       		.byte	0x1
 694 00d6 20000000 		.4byte	.LFB8
 695 00da 22000000 		.4byte	.LFE8
ARM GAS  /tmp/ccRwBG1I.s 			page 16


 696 00de 02       		.byte	0x2
 697 00df 7D       		.byte	0x7d
 698 00e0 00       		.sleb128 0
 699 00e1 01       		.byte	0x1
 700 00e2 02       		.uleb128 0x2
 701 00e3 01       		.byte	0x1
 702 00e4 1F020000 		.4byte	.LASF9
 703 00e8 01       		.byte	0x1
 704 00e9 90       		.byte	0x90
 705 00ea 01       		.byte	0x1
 706 00eb 24000000 		.4byte	.LFB9
 707 00ef 26000000 		.4byte	.LFE9
 708 00f3 02       		.byte	0x2
 709 00f4 7D       		.byte	0x7d
 710 00f5 00       		.sleb128 0
 711 00f6 01       		.byte	0x1
 712 00f7 02       		.uleb128 0x2
 713 00f8 01       		.byte	0x1
 714 00f9 AA020000 		.4byte	.LASF10
 715 00fd 01       		.byte	0x1
 716 00fe 91       		.byte	0x91
 717 00ff 01       		.byte	0x1
 718 0100 28000000 		.4byte	.LFB10
 719 0104 2A000000 		.4byte	.LFE10
 720 0108 02       		.byte	0x2
 721 0109 7D       		.byte	0x7d
 722 010a 00       		.sleb128 0
 723 010b 01       		.byte	0x1
 724 010c 02       		.uleb128 0x2
 725 010d 01       		.byte	0x1
 726 010e 3C010000 		.4byte	.LASF11
 727 0112 01       		.byte	0x1
 728 0113 92       		.byte	0x92
 729 0114 01       		.byte	0x1
 730 0115 2C000000 		.4byte	.LFB11
 731 0119 2E000000 		.4byte	.LFE11
 732 011d 02       		.byte	0x2
 733 011e 7D       		.byte	0x7d
 734 011f 00       		.sleb128 0
 735 0120 01       		.byte	0x1
 736 0121 02       		.uleb128 0x2
 737 0122 01       		.byte	0x1
 738 0123 95000000 		.4byte	.LASF12
 739 0127 01       		.byte	0x1
 740 0128 93       		.byte	0x93
 741 0129 01       		.byte	0x1
 742 012a 30000000 		.4byte	.LFB12
 743 012e 32000000 		.4byte	.LFE12
 744 0132 02       		.byte	0x2
 745 0133 7D       		.byte	0x7d
 746 0134 00       		.sleb128 0
 747 0135 01       		.byte	0x1
 748 0136 02       		.uleb128 0x2
 749 0137 01       		.byte	0x1
 750 0138 6A010000 		.4byte	.LASF13
 751 013c 01       		.byte	0x1
 752 013d 94       		.byte	0x94
ARM GAS  /tmp/ccRwBG1I.s 			page 17


 753 013e 01       		.byte	0x1
 754 013f 34000000 		.4byte	.LFB13
 755 0143 36000000 		.4byte	.LFE13
 756 0147 02       		.byte	0x2
 757 0148 7D       		.byte	0x7d
 758 0149 00       		.sleb128 0
 759 014a 01       		.byte	0x1
 760 014b 02       		.uleb128 0x2
 761 014c 01       		.byte	0x1
 762 014d 2A010000 		.4byte	.LASF14
 763 0151 01       		.byte	0x1
 764 0152 95       		.byte	0x95
 765 0153 01       		.byte	0x1
 766 0154 38000000 		.4byte	.LFB14
 767 0158 3A000000 		.4byte	.LFE14
 768 015c 02       		.byte	0x2
 769 015d 7D       		.byte	0x7d
 770 015e 00       		.sleb128 0
 771 015f 01       		.byte	0x1
 772 0160 02       		.uleb128 0x2
 773 0161 01       		.byte	0x1
 774 0162 31020000 		.4byte	.LASF15
 775 0166 01       		.byte	0x1
 776 0167 96       		.byte	0x96
 777 0168 01       		.byte	0x1
 778 0169 3C000000 		.4byte	.LFB15
 779 016d 3E000000 		.4byte	.LFE15
 780 0171 02       		.byte	0x2
 781 0172 7D       		.byte	0x7d
 782 0173 00       		.sleb128 0
 783 0174 01       		.byte	0x1
 784 0175 02       		.uleb128 0x2
 785 0176 01       		.byte	0x1
 786 0177 AD010000 		.4byte	.LASF16
 787 017b 01       		.byte	0x1
 788 017c 97       		.byte	0x97
 789 017d 01       		.byte	0x1
 790 017e 40000000 		.4byte	.LFB16
 791 0182 42000000 		.4byte	.LFE16
 792 0186 02       		.byte	0x2
 793 0187 7D       		.byte	0x7d
 794 0188 00       		.sleb128 0
 795 0189 01       		.byte	0x1
 796 018a 02       		.uleb128 0x2
 797 018b 01       		.byte	0x1
 798 018c 1A010000 		.4byte	.LASF17
 799 0190 01       		.byte	0x1
 800 0191 98       		.byte	0x98
 801 0192 01       		.byte	0x1
 802 0193 44000000 		.4byte	.LFB17
 803 0197 46000000 		.4byte	.LFE17
 804 019b 02       		.byte	0x2
 805 019c 7D       		.byte	0x7d
 806 019d 00       		.sleb128 0
 807 019e 01       		.byte	0x1
 808 019f 02       		.uleb128 0x2
 809 01a0 01       		.byte	0x1
ARM GAS  /tmp/ccRwBG1I.s 			page 18


 810 01a1 89020000 		.4byte	.LASF18
 811 01a5 01       		.byte	0x1
 812 01a6 99       		.byte	0x99
 813 01a7 01       		.byte	0x1
 814 01a8 48000000 		.4byte	.LFB18
 815 01ac 4A000000 		.4byte	.LFE18
 816 01b0 02       		.byte	0x2
 817 01b1 7D       		.byte	0x7d
 818 01b2 00       		.sleb128 0
 819 01b3 01       		.byte	0x1
 820 01b4 02       		.uleb128 0x2
 821 01b5 01       		.byte	0x1
 822 01b6 E8000000 		.4byte	.LASF19
 823 01ba 01       		.byte	0x1
 824 01bb 9A       		.byte	0x9a
 825 01bc 01       		.byte	0x1
 826 01bd 4C000000 		.4byte	.LFB19
 827 01c1 4E000000 		.4byte	.LFE19
 828 01c5 02       		.byte	0x2
 829 01c6 7D       		.byte	0x7d
 830 01c7 00       		.sleb128 0
 831 01c8 01       		.byte	0x1
 832 01c9 02       		.uleb128 0x2
 833 01ca 01       		.byte	0x1
 834 01cb 7A020000 		.4byte	.LASF20
 835 01cf 01       		.byte	0x1
 836 01d0 9B       		.byte	0x9b
 837 01d1 01       		.byte	0x1
 838 01d2 50000000 		.4byte	.LFB20
 839 01d6 52000000 		.4byte	.LFE20
 840 01da 02       		.byte	0x2
 841 01db 7D       		.byte	0x7d
 842 01dc 00       		.sleb128 0
 843 01dd 01       		.byte	0x1
 844 01de 02       		.uleb128 0x2
 845 01df 01       		.byte	0x1
 846 01e0 7C010000 		.4byte	.LASF21
 847 01e4 01       		.byte	0x1
 848 01e5 9C       		.byte	0x9c
 849 01e6 01       		.byte	0x1
 850 01e7 54000000 		.4byte	.LFB21
 851 01eb 56000000 		.4byte	.LFE21
 852 01ef 02       		.byte	0x2
 853 01f0 7D       		.byte	0x7d
 854 01f1 00       		.sleb128 0
 855 01f2 01       		.byte	0x1
 856 01f3 02       		.uleb128 0x2
 857 01f4 01       		.byte	0x1
 858 01f5 99020000 		.4byte	.LASF22
 859 01f9 01       		.byte	0x1
 860 01fa 9D       		.byte	0x9d
 861 01fb 01       		.byte	0x1
 862 01fc 58000000 		.4byte	.LFB22
 863 0200 5A000000 		.4byte	.LFE22
 864 0204 02       		.byte	0x2
 865 0205 7D       		.byte	0x7d
 866 0206 00       		.sleb128 0
ARM GAS  /tmp/ccRwBG1I.s 			page 19


 867 0207 01       		.byte	0x1
 868 0208 02       		.uleb128 0x2
 869 0209 01       		.byte	0x1
 870 020a 84000000 		.4byte	.LASF23
 871 020e 01       		.byte	0x1
 872 020f 9E       		.byte	0x9e
 873 0210 01       		.byte	0x1
 874 0211 5C000000 		.4byte	.LFB23
 875 0215 5E000000 		.4byte	.LFE23
 876 0219 02       		.byte	0x2
 877 021a 7D       		.byte	0x7d
 878 021b 00       		.sleb128 0
 879 021c 01       		.byte	0x1
 880 021d 02       		.uleb128 0x2
 881 021e 01       		.byte	0x1
 882 021f B3000000 		.4byte	.LASF24
 883 0223 01       		.byte	0x1
 884 0224 9F       		.byte	0x9f
 885 0225 01       		.byte	0x1
 886 0226 60000000 		.4byte	.LFB24
 887 022a 62000000 		.4byte	.LFE24
 888 022e 02       		.byte	0x2
 889 022f 7D       		.byte	0x7d
 890 0230 00       		.sleb128 0
 891 0231 01       		.byte	0x1
 892 0232 02       		.uleb128 0x2
 893 0233 01       		.byte	0x1
 894 0234 C4000000 		.4byte	.LASF25
 895 0238 01       		.byte	0x1
 896 0239 A0       		.byte	0xa0
 897 023a 01       		.byte	0x1
 898 023b 64000000 		.4byte	.LFB25
 899 023f 66000000 		.4byte	.LFE25
 900 0243 02       		.byte	0x2
 901 0244 7D       		.byte	0x7d
 902 0245 00       		.sleb128 0
 903 0246 01       		.byte	0x1
 904 0247 03       		.uleb128 0x3
 905 0248 61020000 		.4byte	.LASF28
 906 024c 01       		.byte	0x1
 907 024d 28       		.byte	0x28
 908 024e 54020000 		.4byte	0x254
 909 0252 01       		.byte	0x1
 910 0253 01       		.byte	0x1
 911 0254 04       		.uleb128 0x4
 912 0255 04       		.byte	0x4
 913 0256 07       		.byte	0x7
 914 0257 08010000 		.4byte	.LASF26
 915 025b 05       		.uleb128 0x5
 916 025c 7A020000 		.4byte	0x27a
 917 0260 6B020000 		.4byte	0x26b
 918 0264 06       		.uleb128 0x6
 919 0265 6B020000 		.4byte	0x26b
 920 0269 2F       		.byte	0x2f
 921 026a 00       		.byte	0
 922 026b 04       		.uleb128 0x4
 923 026c 04       		.byte	0x4
ARM GAS  /tmp/ccRwBG1I.s 			page 20


 924 026d 07       		.byte	0x7
 925 026e 43020000 		.4byte	.LASF27
 926 0272 07       		.uleb128 0x7
 927 0273 04       		.byte	0x4
 928 0274 78020000 		.4byte	0x278
 929 0278 08       		.uleb128 0x8
 930 0279 01       		.byte	0x1
 931 027a 09       		.uleb128 0x9
 932 027b 72020000 		.4byte	0x272
 933 027f 0A       		.uleb128 0xa
 934 0280 4C020000 		.4byte	.LASF29
 935 0284 01       		.byte	0x1
 936 0285 52       		.byte	0x52
 937 0286 91020000 		.4byte	0x291
 938 028a 01       		.byte	0x1
 939 028b 05       		.byte	0x5
 940 028c 03       		.byte	0x3
 941 028d 00000000 		.4byte	gVectors
 942 0291 09       		.uleb128 0x9
 943 0292 5B020000 		.4byte	0x25b
 944 0296 00       		.byte	0
 945              		.section	.debug_abbrev,"",%progbits
 946              	.Ldebug_abbrev0:
 947 0000 01       		.uleb128 0x1
 948 0001 11       		.uleb128 0x11
 949 0002 01       		.byte	0x1
 950 0003 25       		.uleb128 0x25
 951 0004 0E       		.uleb128 0xe
 952 0005 13       		.uleb128 0x13
 953 0006 0B       		.uleb128 0xb
 954 0007 03       		.uleb128 0x3
 955 0008 0E       		.uleb128 0xe
 956 0009 1B       		.uleb128 0x1b
 957 000a 0E       		.uleb128 0xe
 958 000b 11       		.uleb128 0x11
 959 000c 01       		.uleb128 0x1
 960 000d 12       		.uleb128 0x12
 961 000e 01       		.uleb128 0x1
 962 000f 10       		.uleb128 0x10
 963 0010 06       		.uleb128 0x6
 964 0011 00       		.byte	0
 965 0012 00       		.byte	0
 966 0013 02       		.uleb128 0x2
 967 0014 2E       		.uleb128 0x2e
 968 0015 00       		.byte	0
 969 0016 3F       		.uleb128 0x3f
 970 0017 0C       		.uleb128 0xc
 971 0018 03       		.uleb128 0x3
 972 0019 0E       		.uleb128 0xe
 973 001a 3A       		.uleb128 0x3a
 974 001b 0B       		.uleb128 0xb
 975 001c 3B       		.uleb128 0x3b
 976 001d 0B       		.uleb128 0xb
 977 001e 27       		.uleb128 0x27
 978 001f 0C       		.uleb128 0xc
 979 0020 11       		.uleb128 0x11
 980 0021 01       		.uleb128 0x1
ARM GAS  /tmp/ccRwBG1I.s 			page 21


 981 0022 12       		.uleb128 0x12
 982 0023 01       		.uleb128 0x1
 983 0024 40       		.uleb128 0x40
 984 0025 0A       		.uleb128 0xa
 985 0026 9742     		.uleb128 0x2117
 986 0028 0C       		.uleb128 0xc
 987 0029 00       		.byte	0
 988 002a 00       		.byte	0
 989 002b 03       		.uleb128 0x3
 990 002c 34       		.uleb128 0x34
 991 002d 00       		.byte	0
 992 002e 03       		.uleb128 0x3
 993 002f 0E       		.uleb128 0xe
 994 0030 3A       		.uleb128 0x3a
 995 0031 0B       		.uleb128 0xb
 996 0032 3B       		.uleb128 0x3b
 997 0033 0B       		.uleb128 0xb
 998 0034 49       		.uleb128 0x49
 999 0035 13       		.uleb128 0x13
 1000 0036 3F       		.uleb128 0x3f
 1001 0037 0C       		.uleb128 0xc
 1002 0038 3C       		.uleb128 0x3c
 1003 0039 0C       		.uleb128 0xc
 1004 003a 00       		.byte	0
 1005 003b 00       		.byte	0
 1006 003c 04       		.uleb128 0x4
 1007 003d 24       		.uleb128 0x24
 1008 003e 00       		.byte	0
 1009 003f 0B       		.uleb128 0xb
 1010 0040 0B       		.uleb128 0xb
 1011 0041 3E       		.uleb128 0x3e
 1012 0042 0B       		.uleb128 0xb
 1013 0043 03       		.uleb128 0x3
 1014 0044 0E       		.uleb128 0xe
 1015 0045 00       		.byte	0
 1016 0046 00       		.byte	0
 1017 0047 05       		.uleb128 0x5
 1018 0048 01       		.uleb128 0x1
 1019 0049 01       		.byte	0x1
 1020 004a 49       		.uleb128 0x49
 1021 004b 13       		.uleb128 0x13
 1022 004c 01       		.uleb128 0x1
 1023 004d 13       		.uleb128 0x13
 1024 004e 00       		.byte	0
 1025 004f 00       		.byte	0
 1026 0050 06       		.uleb128 0x6
 1027 0051 21       		.uleb128 0x21
 1028 0052 00       		.byte	0
 1029 0053 49       		.uleb128 0x49
 1030 0054 13       		.uleb128 0x13
 1031 0055 2F       		.uleb128 0x2f
 1032 0056 0B       		.uleb128 0xb
 1033 0057 00       		.byte	0
 1034 0058 00       		.byte	0
 1035 0059 07       		.uleb128 0x7
 1036 005a 0F       		.uleb128 0xf
 1037 005b 00       		.byte	0
ARM GAS  /tmp/ccRwBG1I.s 			page 22


 1038 005c 0B       		.uleb128 0xb
 1039 005d 0B       		.uleb128 0xb
 1040 005e 49       		.uleb128 0x49
 1041 005f 13       		.uleb128 0x13
 1042 0060 00       		.byte	0
 1043 0061 00       		.byte	0
 1044 0062 08       		.uleb128 0x8
 1045 0063 15       		.uleb128 0x15
 1046 0064 00       		.byte	0
 1047 0065 27       		.uleb128 0x27
 1048 0066 0C       		.uleb128 0xc
 1049 0067 00       		.byte	0
 1050 0068 00       		.byte	0
 1051 0069 09       		.uleb128 0x9
 1052 006a 26       		.uleb128 0x26
 1053 006b 00       		.byte	0
 1054 006c 49       		.uleb128 0x49
 1055 006d 13       		.uleb128 0x13
 1056 006e 00       		.byte	0
 1057 006f 00       		.byte	0
 1058 0070 0A       		.uleb128 0xa
 1059 0071 34       		.uleb128 0x34
 1060 0072 00       		.byte	0
 1061 0073 03       		.uleb128 0x3
 1062 0074 0E       		.uleb128 0xe
 1063 0075 3A       		.uleb128 0x3a
 1064 0076 0B       		.uleb128 0xb
 1065 0077 3B       		.uleb128 0x3b
 1066 0078 0B       		.uleb128 0xb
 1067 0079 49       		.uleb128 0x49
 1068 007a 13       		.uleb128 0x13
 1069 007b 3F       		.uleb128 0x3f
 1070 007c 0C       		.uleb128 0xc
 1071 007d 02       		.uleb128 0x2
 1072 007e 0A       		.uleb128 0xa
 1073 007f 00       		.byte	0
 1074 0080 00       		.byte	0
 1075 0081 00       		.byte	0
 1076              		.section	.debug_aranges,"",%progbits
 1077 0000 1C000000 		.4byte	0x1c
 1078 0004 0200     		.2byte	0x2
 1079 0006 00000000 		.4byte	.Ldebug_info0
 1080 000a 04       		.byte	0x4
 1081 000b 00       		.byte	0
 1082 000c 0000     		.2byte	0
 1083 000e 0000     		.2byte	0
 1084 0010 00000000 		.4byte	.Ltext0
 1085 0014 66000000 		.4byte	.Letext0-.Ltext0
 1086 0018 00000000 		.4byte	0
 1087 001c 00000000 		.4byte	0
 1088              		.section	.debug_line,"",%progbits
 1089              	.Ldebug_line0:
 1090 0000 E2000000 		.section	.debug_str,"MS",%progbits,1
 1090      02003100 
 1090      00000201 
 1090      FB0E0D00 
 1090      01010101 
ARM GAS  /tmp/ccRwBG1I.s 			page 23


 1091              	.LASF30:
 1092 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160919 (release) [ARM/embedded-5-br"
 1092      43313120 
 1092      352E342E 
 1092      31203230 
 1092      31363039 
 1093 0033 616E6368 		.ascii	"anch revision 240496] -mcpu=cortex-m0 -mthumb -gdwa"
 1093      20726576 
 1093      6973696F 
 1093      6E203234 
 1093      30343936 
 1094 0066 72662D32 		.ascii	"rf-2 -O0 -fomit-frame-pointer\000"
 1094      202D4F30 
 1094      202D666F 
 1094      6D69742D 
 1094      6672616D 
 1095              	.LASF23:
 1096 0084 50494F5F 		.ascii	"PIO_2_IRQHandler\000"
 1096      325F4952 
 1096      5148616E 
 1096      646C6572 
 1096      00
 1097              	.LASF12:
 1098 0095 4932435F 		.ascii	"I2C_IRQHandler\000"
 1098      49525148 
 1098      616E646C 
 1098      657200
 1099              	.LASF7:
 1100 00a4 50656E64 		.ascii	"PendSV_Handler\000"
 1100      53565F48 
 1100      616E646C 
 1100      657200
 1101              	.LASF24:
 1102 00b3 50494F5F 		.ascii	"PIO_1_IRQHandler\000"
 1102      315F4952 
 1102      5148616E 
 1102      646C6572 
 1102      00
 1103              	.LASF25:
 1104 00c4 50494F5F 		.ascii	"PIO_0_IRQHandler\000"
 1104      305F4952 
 1104      5148616E 
 1104      646C6572 
 1104      00
 1105              	.LASF4:
 1106 00d5 55736167 		.ascii	"UsageFault_Handler\000"
 1106      65466175 
 1106      6C745F48 
 1106      616E646C 
 1106      657200
 1107              	.LASF19:
 1108 00e8 4144435F 		.ascii	"ADC_IRQHandler\000"
 1108      49525148 
 1108      616E646C 
 1108      657200
 1109              	.LASF3:
 1110 00f7 42757346 		.ascii	"BusFault_Handler\000"
ARM GAS  /tmp/ccRwBG1I.s 			page 24


 1110      61756C74 
 1110      5F48616E 
 1110      646C6572 
 1110      00
 1111              	.LASF26:
 1112 0108 6C6F6E67 		.ascii	"long unsigned int\000"
 1112      20756E73 
 1112      69676E65 
 1112      6420696E 
 1112      7400
 1113              	.LASF17:
 1114 011a 53535030 		.ascii	"SSP0_IRQHandler\000"
 1114      5F495251 
 1114      48616E64 
 1114      6C657200 
 1115              	.LASF14:
 1116 012a 43543136 		.ascii	"CT16B1_IRQHandler\000"
 1116      42315F49 
 1116      52514861 
 1116      6E646C65 
 1116      7200
 1117              	.LASF11:
 1118 013c 53535031 		.ascii	"SSP1_IRQHandler\000"
 1118      5F495251 
 1118      48616E64 
 1118      6C657200 
 1119              	.LASF1:
 1120 014c 48617264 		.ascii	"HardFault_Handler\000"
 1120      4661756C 
 1120      745F4861 
 1120      6E646C65 
 1120      7200
 1121              	.LASF0:
 1122 015e 4E4D495F 		.ascii	"NMI_Handler\000"
 1122      48616E64 
 1122      6C657200 
 1123              	.LASF13:
 1124 016a 43543136 		.ascii	"CT16B0_IRQHandler\000"
 1124      42305F49 
 1124      52514861 
 1124      6E646C65 
 1124      7200
 1125              	.LASF21:
 1126 017c 424F445F 		.ascii	"BOD_IRQHandler\000"
 1126      49525148 
 1126      616E646C 
 1126      657200
 1127              	.LASF2:
 1128 018b 4D656D4D 		.ascii	"MemManage_Handler\000"
 1128      616E6167 
 1128      655F4861 
 1128      6E646C65 
 1128      7200
 1129              	.LASF8:
 1130 019d 53797354 		.ascii	"SysTick_Handler\000"
 1130      69636B5F 
 1130      48616E64 
ARM GAS  /tmp/ccRwBG1I.s 			page 25


 1130      6C657200 
 1131              	.LASF16:
 1132 01ad 43543332 		.ascii	"CT32B1_IRQHandler\000"
 1132      42315F49 
 1132      52514861 
 1132      6E646C65 
 1132      7200
 1133              	.LASF31:
 1134 01bf 636F6465 		.ascii	"code/vectors_designstart.c\000"
 1134      2F766563 
 1134      746F7273 
 1134      5F646573 
 1134      69676E73 
 1135              	.LASF32:
 1136 01da 2F686F6D 		.ascii	"/home/jp2g22/mydocuments/design/system_on_chip/exam"
 1136      652F6A70 
 1136      32673232 
 1136      2F6D7964 
 1136      6F63756D 
 1137 020d 706C655F 		.ascii	"ple_asic/software\000"
 1137      61736963 
 1137      2F736F66 
 1137      74776172 
 1137      6500
 1138              	.LASF9:
 1139 021f 57414B45 		.ascii	"WAKEUP_IRQHandler\000"
 1139      55505F49 
 1139      52514861 
 1139      6E646C65 
 1139      7200
 1140              	.LASF15:
 1141 0231 43543332 		.ascii	"CT32B0_IRQHandler\000"
 1141      42305F49 
 1141      52514861 
 1141      6E646C65 
 1141      7200
 1142              	.LASF27:
 1143 0243 73697A65 		.ascii	"sizetype\000"
 1143      74797065 
 1143      00
 1144              	.LASF29:
 1145 024c 67566563 		.ascii	"gVectors\000"
 1145      746F7273 
 1145      00
 1146              	.LASF5:
 1147 0255 5356435F 		.ascii	"SVC_Handler\000"
 1147      48616E64 
 1147      6C657200 
 1148              	.LASF28:
 1149 0261 5F657374 		.ascii	"_estack\000"
 1149      61636B00 
 1150              	.LASF6:
 1151 0269 44656275 		.ascii	"DebugMon_Handler\000"
 1151      674D6F6E 
 1151      5F48616E 
 1151      646C6572 
 1151      00
ARM GAS  /tmp/ccRwBG1I.s 			page 26


 1152              	.LASF20:
 1153 027a 5744545F 		.ascii	"WDT_IRQHandler\000"
 1153      49525148 
 1153      616E646C 
 1153      657200
 1154              	.LASF18:
 1155 0289 55415254 		.ascii	"UART_IRQHandler\000"
 1155      5F495251 
 1155      48616E64 
 1155      6C657200 
 1156              	.LASF22:
 1157 0299 50494F5F 		.ascii	"PIO_3_IRQHandler\000"
 1157      335F4952 
 1157      5148616E 
 1157      646C6572 
 1157      00
 1158              	.LASF10:
 1159 02aa 435F4341 		.ascii	"C_CAN_IRQHandler\000"
 1159      4E5F4952 
 1159      5148616E 
 1159      646C6572 
 1159      00
 1160              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccRwBG1I.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 vectors_designstart.c
     /tmp/ccRwBG1I.s:58     .vectors:00000000 gVectors
     /tmp/ccRwBG1I.s:55     .vectors:00000000 $d
     /tmp/ccRwBG1I.s:113    .text:00000000 NMI_Handler
     /tmp/ccRwBG1I.s:132    .text:00000004 HardFault_Handler
     /tmp/ccRwBG1I.s:150    .text:00000008 MemManage_Handler
     /tmp/ccRwBG1I.s:168    .text:0000000c BusFault_Handler
     /tmp/ccRwBG1I.s:186    .text:00000010 UsageFault_Handler
     /tmp/ccRwBG1I.s:204    .text:00000014 SVC_Handler
     /tmp/ccRwBG1I.s:222    .text:00000018 DebugMon_Handler
     /tmp/ccRwBG1I.s:240    .text:0000001c PendSV_Handler
     /tmp/ccRwBG1I.s:258    .text:00000020 SysTick_Handler
     /tmp/ccRwBG1I.s:276    .text:00000024 WAKEUP_IRQHandler
     /tmp/ccRwBG1I.s:294    .text:00000028 C_CAN_IRQHandler
     /tmp/ccRwBG1I.s:312    .text:0000002c SSP1_IRQHandler
     /tmp/ccRwBG1I.s:330    .text:00000030 I2C_IRQHandler
     /tmp/ccRwBG1I.s:348    .text:00000034 CT16B0_IRQHandler
     /tmp/ccRwBG1I.s:366    .text:00000038 CT16B1_IRQHandler
     /tmp/ccRwBG1I.s:384    .text:0000003c CT32B0_IRQHandler
     /tmp/ccRwBG1I.s:402    .text:00000040 CT32B1_IRQHandler
     /tmp/ccRwBG1I.s:420    .text:00000044 SSP0_IRQHandler
     /tmp/ccRwBG1I.s:438    .text:00000048 UART_IRQHandler
     /tmp/ccRwBG1I.s:456    .text:0000004c ADC_IRQHandler
     /tmp/ccRwBG1I.s:474    .text:00000050 WDT_IRQHandler
     /tmp/ccRwBG1I.s:492    .text:00000054 BOD_IRQHandler
     /tmp/ccRwBG1I.s:510    .text:00000058 PIO_3_IRQHandler
     /tmp/ccRwBG1I.s:528    .text:0000005c PIO_2_IRQHandler
     /tmp/ccRwBG1I.s:546    .text:00000060 PIO_1_IRQHandler
     /tmp/ccRwBG1I.s:564    .text:00000064 PIO_0_IRQHandler
     /tmp/ccRwBG1I.s:108    .text:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_estack
ResetHandler
